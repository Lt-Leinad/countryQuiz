* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

:root {
    --fs-XL: 42px;
    --fs-L: 26px;
    --fs-M: 21px;
    --fs-S: 16px;
    --darkColor: black;
    --lightColor: white;
    --correct: green;
    --wrong: red;
    --accentColor: orange;
}

@keyframes fade-in {
    from {
        opacity: 0;
    }

    to {
        opacity: 1;
    }
}

@keyframes fade-out {
    from {
        opacity: 1;
    }

    to {
        opacity: 0;
    }
}

.fade-in {
    animation-name: fade-in;
    animation-duration: 250ms;
    animation-timing-function: ease-in-out;
}

.fade-out {
    animation-name: fade-in;
    animation-duration: 250ms;
    animation-timing-function: ease-in-out;
}

.question-container {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    display: flex;
    flex-direction: column;
    gap: 20px;
    align-items: center;
    justify-content: center;
    width: 375px;
    padding: 20px;
    transition: 250ms;
    background-color: var(--lightColor);
    border: 1px solid var(--darkColor);
}

.question-container > * {
    width: 100%;
    text-align: center;
}

.question-number {
    font-size: var(--fs-M);
}

.question {
    font-size: var(--fs-L);
}

.answer-container {
    width: 100%;
    display: grid;
    grid-template-columns: 1fr 1fr;
    grid-auto-rows: 60px;
    grid-gap: 20px;
    padding: 20px;
  }

.country {
    font-size: var(--fs-L);
    object-fit: contain;
}

.answer {
    background: none;
    display: flex;
    align-items: center;
    justify-content: center;
    border: 1px solid var(--darkColor);
    width: 100%;
    font-size: var(--fs-S);
    transition: 250ms;
    background-color: var(--lightColor);
    color: var(--darkColor);
}

.answer:active {
    cursor: pointer;
    background-color: var(--darkColor);
    color: var(--lightColor);
}

.correct, .wrong {
    position: absolute;
    height: 100%;
    width: 100%;
    z-index: 999;
    display: grid;
    place-content: center;
    font-size: var(--fs-XL);
    color: var(--lightColor);
}

.correct {
    background-color: var(--correct);
}

.wrong {
    background-color: var(--wrong);
}

.display-none {
    display: none;
}